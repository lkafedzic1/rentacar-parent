openapi: 3.0.0
info:
  description: "This documentation list all the available endpoints on the application server"
  version: "1.1"
  title: "User Api"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
  - name: "emails"
    description: "Everything about emails documentation"
    externalDocs:
      description: "Find out more"
      url: "http://example.com"
  - name: "invoices"
    description: "Everything about invoices documentation"
    externalDocs:
      description: "Find out more"
      url: "http://example.com"

paths:
  "/invoices":
    get:
      tags:
        - invoices
      summary: query to get all invoices
      description: return a list of all invoices
      operationId: getAllInvoices
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"
        "404":
          description: not found
    post:
      tags:
        - invoinces
      summary: creates an invoice entity
      description: returns the invoice entity that was just created
      operationId: generateInvoice
      requestBody:
        description: invoice object that needs to be added to storage
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "304":
          description: invoice not added
        "422":
          description: unprocessable Entity missing
  "/invoices/{invoiceId}":
    get:
      tags:
        - invoices
      summary: query to get an invoice by the id
      description: return an invoice that matches the id provided
      operationId: getInvoiceById
      parameters:
        - name: invoiceId
          in: path
          description: the invoiceId to match
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "404":
          description: not found
    delete:
      tags:
        - invoices
      summary: endpoint exposing funcitionality to delete an invoice from the database
      operationId: deleteInvoice
      parameters:
        - name: invoiceId
          in: path
          description: the invoiceId to match
          required: true
          schema:
            type: integer
            format: int64
            example: 123456456
      responses:
        "204":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "304":
          description: invoice not updated
        "404":
          description: invoice cannot be found
  "/invoices/users/{userId}":
    get:
      tags:
        - invoices
      summary: query to get an invoice by the user id
      description: return an invoice that matches the user id provided
      operationId: getAllInvoiceByuserId
      parameters:
        - name: userId
          in: path
          description: the userId to match
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"
        "404":
          description: not found
  "/email/send":
    post:
      tags:
        - emails
      summary: sends an email to the client with an attachment
      operationId: sendEmailWithAttachment
      requestBody:
        description: Object representaion of the email object
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailRequest'
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      responses:
        "200":
          description: "successful operation"
        "304":
          description: email not sent
        "401":
          description: not authorized
        "422":
          description: unprocessable email
    put:
      tags:
        - emails
      summary: sends an email to the client
      operationId: sendEmail
      requestBody:
        description: Object representaion of the email object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
      responses:
        "200":
          description: "successful operation"
        "304":
          description: email not sent
        "401":
          description: not authorized
        "422":
          description: unprocessable email

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Invoice:
      type: object
      required:
        - userId
        - reservationId
      properties:
        id:
          type: integer
          format: int64
          example: 1
        userId:
          type: integer
          format: int64
          example: 1
        reservationId:
          type: integer
          format: int64
          example: 1
    Email:
      type: object
      properties:
        subject:
          type: string
          example: 1
        from:
          type: string
          example: Sithembiso
        to:
          type: string
          example: Sithembiso
        message:
          type: string
          example: 9901030292080
        bcc:
          type: string
          example: example@gmail.com,email.me@mail.com,...
    EmailRequest:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: string
            format: binary
        email:
          $ref: '#/components/schemas/Email'




